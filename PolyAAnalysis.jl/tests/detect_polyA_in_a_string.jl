using BioSequences
using Base.Test
push!(LOAD_PATH, "../../")
using PolyAAnalysis

# """
# checks if a string of a read contains polyA strechA strating from the 3' end
#     fq_seq - string for testing
#     minimum_polyA_length - minimum length of polyA strech
#     maximum_non_A_symbols - maximum numer of nonA symbols in polyA strech
# """

#test set 1
for (seq,detected) in [("AGAGAATTACAAATCAGAAGGGGAAGATTGACTGTTTAATAAAATGTGCTGGGAATCAATGGCAAATATACAATAAAATAAAATTATATTTTTATTCATATTATACCCCAAATAAATTTCAGATATACATAAAACCCAAAGTAAAATATT",false)]
    @test detect_polyA_in_a_string(seq,10,1,debug=true)  == detected
end

for (seq,detected) in [("GAATGTATGGTAGGAATGTATTCTCTTGTAGGAATGTAAATCTGTATTAAAAGGGGGTCCAAGCCAGGCCCCCAGGTCTTCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAA",true)]
    @test detect_polyA_in_a_string(seq,10,1,debug=true)  == detected
end

for (seq,detected) in [("AGAGAATTACAAATCAGAAGGGGAAGATTGACTGTTTAATAAAATGTGCTGGGAATCAATGGCAAATATACAATAAAATAAAATTATATTTTTATTCATATTATACCCCAAATAAATTTCAGATATACATAAAACCCAAAGTAAAATATT",true)]
    @test detect_polyA_in_a_string(seq,10,3,debug=true)  == detected
end

for (seq,detected) in [("AGAGAATTACAAATCAGAAGGGGAAGATTGACTGTTTAATAAAATGTGCTGGGAATCAATGGCAAATATACAATAAAATAAAATTATATTTTTATTCATATTATACCCCAAATAAATTTCAGATATACATAAAACCCAAAGTAAAATATT",false)]
    @test detect_polyA_in_a_string(seq,10,1,debug=true)  == detected
end

for (seq,detected) in [("TCAAAAAAATAATATGGTAATAATAATAAAAGCAGTGCCCAGAGAACAAGGCTTGTTGGCTGTTCCACCCCAGGGGGCCCCTTGCACAGGCGGTGCCATCTCTGCCTCCCAAAGCTCTAAGAGCCACTGTCCCCCATCCCAAGAGA",true)]
    @test detect_polyA_in_a_string(seq,10,1,debug=true)  == detected
end

#GAATGTATGGTAGGAATGTATTCTCTTGTAGGAATGTAAATCTGTATTAAAAGGGGGTCCAAGCCAGGCCCCCAGGTCTTCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAA
